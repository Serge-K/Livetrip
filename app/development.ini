###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/environment.html
###

[app:main]
use = egg:livetrip#main

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_celery

sqlalchemy.url = postgresql://livetrip:livetrippa$$w0rd@localhost:5432/livetrip

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

# session settings
redis.sessions.secret = jtyjtjtjtjtyjtrrgdrhdddhdhjjmyyujyukk

# session cookie settings
redis.sessions.cookie_name = session
redis.sessions.cookie_max_age = 900
redis.sessions.cookie_path = /
redis.sessions.cookie_domain =
redis.sessions.cookie_secure = False
redis.sessions.cookie_httponly = False
redis.sessions.cookie_on_exception = True

# or as individual settings (note: the URL gets preference if you do both)
redis.sessions.host = localhost
redis.sessions.port = 6379
redis.sessions.db = 1
#redis.sessions.password = 7235242c84e48e50638795f5e0ad06549b91a9fe39428b6411c31b7f00e9fa9b

# you can specify a prefix to be used with session keys in redis
redis.sessions.prefix = app

# ---------------------------------------------------------
# App settings
#----------------------------------------------------------

[celery]
BROKER_URL = redis://localhost:6379/10
CELERY_IMPORTS = async_task.crontab.test

[celerybeat:print_date]
task = async_task.crontab.test.print_date
type = integer
schedule = 10

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = 127.0.0.1
port = 6444
workers = 2
timeout = 200
preload_app = false
reload = true
proc_name = Livetrip-Server
pidfile = livetrip.pid
daemon = True
accesslog = -
loglevel = debug
# Capture Paste WCGI error message
capture_output = True
errorlog = /var/log/gunicorn/livetrip.error.log

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/narr/logging.html
###

[loggers]
keys = root, app, sqlalchemy, celery

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_app]
level = DEBUG
handlers =
qualname = app

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_gunicorn]
class = gunicorn.glogging.Logger
args = (sys.stderr,)
formatter = generic

[logger_celery]
level = INFO
handlers =
qualname = celery

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s

# Make sure Celery worker doesn't silently swallow exceptions
# See http://stackoverflow.com/a/20719461/315168
# https://github.com/celery/celery/issues/2437
[logger_celery_worker_job]
level = ERROR
handlers =
qualname = celery.worker.job
propagate = 1

